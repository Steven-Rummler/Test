@model BlowOut.Models.Instrument

<br />

<div class="jumbotron">
    <h4>Edit Instrument</h4>
    <hr />

    <div class="row">
        <div class="col-md-6">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.InstrumentID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Description", new SelectList(new List<SelectListItem>() {
                                new SelectListItem() { Text = "Clarinet", Value = "Clarinet" },
                                new SelectListItem() { Text = "Flute", Value = "Flute" },
                                new SelectListItem() { Text = "Saxophone", Value = "Saxophone" },
                                new SelectListItem() { Text = "Trombone", Value = "Trombone" },
                                new SelectListItem() { Text = "Trumpet", Value = "Trumpet" },
                                new SelectListItem() { Text = "Tuba", Value = "Tuba" }}, "Value", "Text"),
                                htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Type", new SelectList(new List<SelectListItem>() {
                                new SelectListItem() { Text = "New", Value = "New" },
                                new SelectListItem() { Text = "Used", Value = "Used" }}, "Value", "Text"),
                                htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientID, "ClientID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ClientID", null, "Select a Client", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
        <div class="col-md-6">
            @{string link = "/Content/" + Model.Description + ".jpg";}
            <img src=@link alt="Music" style="max-width:100%; max-height:100%;" />
        </div>
    </div>
</div>